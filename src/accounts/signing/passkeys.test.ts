import type { Hex } from 'viem'
import { describe, expect, test } from 'vitest'
import {
  generateCredentialId,
  packSignature,
  parsePublicKey,
  parseSignature,
  type WebAuthnSignature,
} from './passkeys'

describe('Passkeys', () => {
  describe('Parse Public Key', () => {
    test('default', () => {
      const parsed = parsePublicKey(
        '0x7a2b9234dbc079da984e021acb76cf230dff5c03f2c5668024ddaeeb388520294bd61dcef34cade4d3bca405e63179ef022948ac45d0b0530cb125977c118ad7',
      )
      expect(parsed.x).toEqual(
        55259151030970399927675340420359705684663366332711724388150056154288143802409n,
      )
      expect(parsed.y).toEqual(
        34301774645623054632612895881498878184566570389017277955884655401641769536215n,
      )
    })
  })

  describe('Parse Signature', () => {
    test('default', () => {
      const parsed = parseSignature(
        '0xf60f80fe3fd029d1b380d631f0b659bfbc8f8f60921a88e1e123c159aa540f920ed337464d1bb813dc5f9c3e81998185370da49cc525e9f42cdf805f1030aff8',
      )
      expect(parsed.r).toEqual(
        111296353735534357766084082487308191701889898756402773464442570100570127077266n,
      )
      expect(parsed.s).toEqual(
        6705566102199758127831148650668918567109283965479844611524279039128750829560n,
      )
    })
  })

  describe('Generate Credential ID', () => {
    test('default', () => {
      const id = generateCredentialId(
        55259151030970399927675340420359705684663366332711724388150056154288143802409n,
        34301774645623054632612895881498878184566570389017277955884655401641769536215n,
        '0xb975975c9f381b5df3b4af93bdd1ba739698bc37',
      )
      expect(id).toEqual(
        '0x9437809df26444a849d303b1174543f0851df5fae657da19f3bb0d92356426ea',
      )
    })
  })

  describe('Pack Signature', () => {
    test('single', () => {
      const credIds: Hex[] = [
        '0x9437809df26444a849d303b1174543f0851df5fae657da19f3bb0d92356426ea',
      ]
      const usePrecompile = false
      const webAuthns: WebAuthnSignature[] = [
        {
          authenticatorData:
            '0x49960de5880e8c687434170f6476605b8fe4aeb9a28632c7995cf3ba831d97631d00000000',
          clientDataJSON:
            '{"type":"webauthn.get","challenge":"4p2TiZpTooLCFFYTC2HmMPVMiVjZGghCJ0dz7zUDEeA","origin":"http://localhost:5173","crossOrigin":false}',
          challengeIndex: 23n,
          typeIndex: 1n,
          r: 111296353735534357766084082487308191701889898756402773464442570100570127077266n,
          s: 6705566102199758127831148650668918567109283965479844611524279039128750829560n,
        },
      ]
      const packed = packSignature(credIds, usePrecompile, webAuthns)
      expect(packed).toEqual(
        '0x0000000000000000000000000000000000000000000000000000000000000060000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000019437809df26444a849d303b1174543f0851df5fae657da19f3bb0d92356426ea0000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000012000000000000000000000000000000000000000000000000000000000000000170000000000000000000000000000000000000000000000000000000000000001f60f80fe3fd029d1b380d631f0b659bfbc8f8f60921a88e1e123c159aa540f920ed337464d1bb813dc5f9c3e81998185370da49cc525e9f42cdf805f1030aff8000000000000000000000000000000000000000000000000000000000000002549960de5880e8c687434170f6476605b8fe4aeb9a28632c7995cf3ba831d97631d0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000867b2274797065223a22776562617574686e2e676574222c226368616c6c656e6765223a2234703254695a70546f6f4c43464659544332486d4d50564d69566a5a476768434a30647a377a5544456541222c226f726967696e223a22687474703a2f2f6c6f63616c686f73743a35313733222c2263726f73734f726967696e223a66616c73657d0000000000000000000000000000000000000000000000000000',
      )
    })

    test('multisig', () => {
      const credIds: Hex[] = [
        '0x9437809df26444a849d303b1174543f0851df5fae657da19f3bb0d92356426ea',
        '0x6be9646e4d64132d1a1789a467d0501e948d23afce6792d963f401434d7bef33',
      ]
      const usePrecompile = true
      const webAuthns: WebAuthnSignature[] = [
        {
          authenticatorData:
            '0x49960de5880e8c687434170f6476605b8fe4aeb9a28632c7995cf3ba831d97631d00000000',
          clientDataJSON:
            '{"type":"webauthn.get","challenge":"4p2TiZpTooLCFFYTC2HmMPVMiVjZGghCJ0dz7zUDEeA","origin":"http://localhost:5173","crossOrigin":false}',
          challengeIndex: 23n,
          typeIndex: 1n,
          r: 111296353735534357766084082487308191701889898756402773464442570100570127077266n,
          s: 6705566102199758127831148650668918567109283965479844611524279039128750829560n,
        },
        {
          authenticatorData:
            '0x49960de5880e8c687434170f6476605b8fe4aeb9a28632c7995cf3ba831d97631d00000000',
          clientDataJSON:
            '{"type":"webauthn.get","challenge":"19qAcQAVCeucFt8tQSizBBdbxW6Jkex_3nAejdRuVek","origin":"http://localhost:5173","crossOrigin":false}',
          challengeIndex: 23n,
          typeIndex: 1n,
          r: 52674584175531096231012948456392242307658490190760877544141461393264453154030n,
          s: 1045924358482323524717958171193057427003444327614976707002321626568131749413n,
        },
      ]
      const packed = packSignature(credIds, usePrecompile, webAuthns)
      expect(packed).toEqual(
        '0x0000000000000000000000000000000000000000000000000000000000000060000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000029437809df26444a849d303b1174543f0851df5fae657da19f3bb0d92356426ea6be9646e4d64132d1a1789a467d0501e948d23afce6792d963f401434d7bef3300000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000022000000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000012000000000000000000000000000000000000000000000000000000000000000170000000000000000000000000000000000000000000000000000000000000001f60f80fe3fd029d1b380d631f0b659bfbc8f8f60921a88e1e123c159aa540f920ed337464d1bb813dc5f9c3e81998185370da49cc525e9f42cdf805f1030aff8000000000000000000000000000000000000000000000000000000000000002549960de5880e8c687434170f6476605b8fe4aeb9a28632c7995cf3ba831d97631d0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000867b2274797065223a22776562617574686e2e676574222c226368616c6c656e6765223a2234703254695a70546f6f4c43464659544332486d4d50564d69566a5a476768434a30647a377a5544456541222c226f726967696e223a22687474703a2f2f6c6f63616c686f73743a35313733222c2263726f73734f726967696e223a66616c73657d000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000000000120000000000000000000000000000000000000000000000000000000000000001700000000000000000000000000000000000000000000000000000000000000017474c214167b8a4704cf06f75287a738e7ddbcca9cc0383db6dac6a7d090f4ee024ff8e2a2e8c54aa8cf5f36e3b6125016c3d58d896e3a85c5cd2cd0027a2625000000000000000000000000000000000000000000000000000000000000002549960de5880e8c687434170f6476605b8fe4aeb9a28632c7995cf3ba831d97631d0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000867b2274797065223a22776562617574686e2e676574222c226368616c6c656e6765223a22313971416351415643657563467438745153697a424264627857364a6b65785f336e41656a64527556656b222c226f726967696e223a22687474703a2f2f6c6f63616c686f73743a35313733222c2263726f73734f726967696e223a66616c73657d0000000000000000000000000000000000000000000000000000',
      )
    })
  })
})
