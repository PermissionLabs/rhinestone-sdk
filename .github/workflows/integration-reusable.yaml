name: Integration Tests (Reusable)

on:
  workflow_call:

jobs:
  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        environment: ["node-cjs", "node-esm", "react-native"]
    
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2

      - name: Install dependencies
        run: bun install

      - name: Build SDK
        run: bun run build

      - name: Pack SDK
        run: |
          # Create a clean workspace for packing
          mkdir -p /tmp/sdk-pack
          cp -r src/* /tmp/sdk-pack/
          cd /tmp/sdk-pack
          npm pack --pack-destination $GITHUB_WORKSPACE/

      - name: Test ${{ matrix.environment }} integration
        run: |
          case "${{ matrix.environment }}" in
            "node-cjs")
              echo "Testing Node CommonJS integration..."
              
              # Create test directory completely outside the repo
              mkdir -p /tmp/integration-test/node-cjs
              cd /tmp/integration-test/node-cjs
              
              # Initialize basic Node project
              npm init -y
              
              # Install the packed SDK using absolute path
              npm install $GITHUB_WORKSPACE/rhinestone-sdk-*.tgz
              
              # Create test script
              cat > index.js << 'EOF'
          const sdk = require('@rhinestone/sdk');
          console.log('✓ SDK imported successfully');
          
          // Basic smoke test - just try to access main exports
          if (typeof sdk === 'object' && sdk !== null) {
            console.log('✓ SDK is an object');
          } else {
            console.error('✗ SDK import failed - not an object');
            process.exit(1);
          }
          
          console.log('✓ Node CommonJS integration test passed');
          EOF
              
              # Run the test
              node index.js
              ;;
            "node-esm")
              echo "Testing Node ESM integration..."
              
              # Create test directory completely outside the repo
              mkdir -p /tmp/integration-test/node-esm
              cd /tmp/integration-test/node-esm
              
              # Initialize basic Node project with ESM
              npm init -y
              # Set package type to module for ESM
              npm pkg set type=module
              
              # Install the packed SDK using absolute path
              npm install $GITHUB_WORKSPACE/rhinestone-sdk-*.tgz
              
              # Create test script
              cat > index.js << 'EOF'
          import sdk from '@rhinestone/sdk';
          console.log('✓ SDK imported successfully');
          
          // Basic smoke test - just try to access main exports
          if (typeof sdk === 'object' && sdk !== null) {
            console.log('✓ SDK is an object');
          } else {
            console.error('✗ SDK import failed - not an object');
            process.exit(1);
          }
          
          console.log('✓ Node ESM integration test passed');
          EOF
              
              # Run the test
              node index.js
              ;;
            "react-native")
              echo "Testing React Native integration..."
              
              # Create test directory completely outside the repo
              mkdir -p /tmp/integration-test/react-native
              cd /tmp/integration-test/react-native
              
              # Install Expo CLI globally
              npm install -g @expo/cli
              
              # Create new Expo project with web support
              npx create-expo-app --template blank-typescript RhinestoneSDKTest
              cd RhinestoneSDKTest
              
              # Install the packed SDK using absolute path
              npm install $GITHUB_WORKSPACE/rhinestone-sdk-*.tgz
              
              # Create test component
              cat > App.tsx << 'EOF'
          import React from 'react';
          import { StyleSheet, Text, View } from 'react-native';
          import sdk from '@rhinestone/sdk';
          
          export default function App() {
            const [testResult, setTestResult] = React.useState<string>('Testing...');
            
            React.useEffect(() => {
              try {
                console.log('✓ SDK imported successfully');
                
                // Basic smoke test - just try to access main exports
                if (typeof sdk === 'object' && sdk !== null) {
                  console.log('✓ SDK is an object');
                  setTestResult('✓ React Native integration test passed');
                } else {
                  console.error('✗ SDK import failed - not an object');
                  setTestResult('✗ React Native integration test failed');
                }
              } catch (error) {
                console.error('✗ SDK import failed:', error);
                setTestResult('✗ React Native integration test failed');
              }
            }, []);
            
            return (
              <View style={styles.container}>
                <Text>{testResult}</Text>
              </View>
            );
          }
          
          const styles = StyleSheet.create({
            container: {
              flex: 1,
              backgroundColor: '#fff',
              alignItems: 'center',
              justifyContent: 'center',
            },
          });
          EOF
              
              # Build for web and run the test
              npx expo export:web
              
              # Check if the build succeeded
              if [ $? -eq 0 ]; then
                echo "✓ React Native web build successful"
                echo "✓ React Native integration test passed"
              else
                echo "✗ React Native web build failed"
                exit 1
              fi
              ;;
          esac